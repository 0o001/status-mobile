library 'status-jenkins-lib@v1.6.3'

def isPRBuild = utils.isPRBuild()

pipeline {

  agent { label 'macos && x86_64 && nix-2.11 && xcode-13.4' }

  options {
    timestamps()
    /* Prevent Jenkins jobs from running forever */
    timeout(time: 30, unit: 'MINUTES')
    /* Limit builds retained */
    buildDiscarder(logRotator(
      numToKeepStr: '10',
      daysToKeepStr: '20',
      artifactNumToKeepStr: '10',
    ))
    /* Abort old PR builds. */
    disableConcurrentBuilds(
      abortPrevious: isPRBuild
    )
  }

  parameters {
    string(
      name: 'BUILD_TYPE',
      description: 'Specify build type. Values: pr / e2e / nightly / release',
      defaultValue: 'pr',
    )
  }

  environment {
    LANG     = "en_US.UTF-8"
    LC_ALL   = "en_US.UTF-8"
    LANGUAGE = "en_US.UTF-8"
    TARGET   = 'ios'
    NIX_CONF_DIR = "${env.WORKSPACE}/nix"
    /* See nix/README.md */
    NIX_IGNORE_SYMLINK_STORE = 1
    FASTLANE_DISABLE_COLORS = 1
    BUNDLE_PATH = "${HOME}/.bundle"
  }

  stages {
   stage('Prep') {
      steps {
        script {
          utils.doGitRebasePR()
          utils.symlinkEnv()
          println("Build Number: ${utils.genBuildNumber()}")
        }
      }
    }
    
    stage('Test') {
      steps { script {
        currentBuild.displayName = "PR-${params.PR_ID}" 
        sh 'make run-visual-test-ios-release'          
        
      } }
    }
  }
  
}
